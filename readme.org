#+AUTHOR: Caleb Gossler
#+TITLE: Emacs Configuration
My =init.el= file uses =org-babel-load-file= to load the Emacs Lisp source code blocks in this README. In other words, this README that you're looking at now is my Emacs configuration.

I use =customize= for some settings, mostly some org settings. Those are in =./emacs-custom.el= if you're interested.
* Customize Settings
I want my customization information going to a file other than the emacs config file.
#+BEGIN_SRC emacs-lisp
  (setf custom-file "~/.emacs.d/emacs-custom.el")
#+END_SRC
* Package Configuration
This adds melpa, loads packages, and installs all the packages I want.
#+BEGIN_SRC emacs-lisp
  (require 'package)
  (add-to-list 'package-archives
               '("melpa" . "https://melpa.org/packages/"))
  (package-initialize)
  (when (not package-archive-contents)
      (package-refresh-contents))
  (setf package-selected-packages '(magit
                                    paredit
                                    swiper
                                    zenburn-theme
                                    spaceline))

  (package-install-selected-packages)
#+END_SRC
* Initialization
** Global Settings
Gotta turn off tabs, also enable auto-revert-mode so changes to the files outside of emacs update the buffers.
#+BEGIN_SRC emacs-lisp
  (global-hl-line-mode 1)
  (ivy-mode 1) ; tyring out ivy
  (setf indent-tabs-mode nil
        initial-buffer-choice "~/org/splash.org")
  (global-auto-revert-mode)
#+END_SRC
** Global Key Bindings
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x g") 'magit-status)
  (global-set-key (kbd "C-x M-g") 'magit-dispatch-popup)
  (global-set-key "\C-cl" 'org-store-link)
  (global-set-key "\C-ca" 'org-agenda)
  (global-set-key "\C-cc" 'org-capture)
  (global-set-key "\C-cb" 'org-iswitchb)
  (global-set-key "\C-cj" 'org-clock-jump-to-current-clock)
  (global-set-key "\C-s" 'swiper)
#+END_SRC
** Making Things Look Nice
#+BEGIN_SRC emacs-lisp
  (require 'spaceline-config)
  (setf powerline-default-separator 'wave
        powerline-height 20)
  (when (eq system-type 'darwin) ; fix for spaceline on mac
    (setq ns-use-srgb-colorspace nil))
  (spaceline-spacemacs-theme)
    (load-theme 'zenburn t)
#+END_SRC
Turn the clock on in the mode-line
#+BEGIN_SRC emacs-lisp
(setf display-time-default-load-average nil)
(display-time-mode)
#+END_SRC
* Org-mode Configuration
** Some Basics
Here we go...
#+BEGIN_SRC emacs-lisp
  (load "org-habit")
  (setf org-agenda-files '("~/org/agenda")
        org-startup-indented t
        org-agenda-span 'day
        org-log-done 'note)
#+END_SRC
** Configure Text Searching of my Notes
If you use =org-agenda-text-search-extra-files=, You can use the agenda view search facility to do text searching in notes you save in org files. It works very similar to searching through notes in something like evernote. I keep all my notes in =~/org/notes= and make them all searchable here without adding them as agenda files. Pretty slick.

=\C-a s= brings up the search prompt in the minibuffer.
#+BEGIN_SRC emacs-lisp
  (setf org-agenda-text-search-extra-files (directory-files-recursively "~/org/notes/" "\.org$"))
#+END_SRC
** Todo Keywords
Setting up keyword workflows.
#+BEGIN_SRC emacs-lisp
  (setq org-todo-keywords
        '((sequence "TODO(t)" "|" "DONE(d)")))
#+END_SRC
